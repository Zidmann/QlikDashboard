// ----------------------------------------------------------------------------------------------------------------
/*
    Author      : Zidmann (emmanuel.zidel@gmail.com)
    Script      : GenModel.qvs
    Version     : 0.1.0
    Description : Script to create the main model used in the different Qlik dashboards
 */
// ----------------------------------------------------------------------------------------------------------------
// Including the variables and the functions available in the Qlik custom library
$(Must_Include='..\02_Ressources\params.qvs');
$(Must_Include='$(vQliklibPath)\core.qvs');

SET vScriptName='GenModel';

// ----------------------------------------------------------------------------------------------------------------
//
call console_info('Loading of the script $(vScriptName)');
call console_jumpline;

call console_info('Loading the competitors');
call file_table_read(vCompetitorQvdFilePath, 'competitor');
call console_jumpline;

call console_info('Loading the scores');
call file_table_read(vScoreQvdFilePath, 'score_tmp');
call console_jumpline;

call console_info('Loading the thresholds');
call file_table_read(vThresholdQvdFilePath, 'threshold');
call console_jumpline;

call console_info('Loading the weights');
call file_table_read(vWeightQvdFilePath, 'weight_tmp');
call console_jumpline;

call console_info('Calculating the score of each competitor each year');
INNER JOIN(score_tmp)
LOAD TOPIC,
     COEFFICIENT
RESIDENT weight_tmp
;
call table_drop('weight_tmp');

score:
LOAD YEAR,
     MATRICULE,
     FLOOR(SUM(SCORE*COEFFICIENT)/SUM(COEFFICIENT), 0.1) as AVG_SCORE
RESIDENT score_tmp
GROUP BY YEAR, MATRICULE
;
call table_drop('score_tmp');

call console_info('Defining if the competitor pass or not the competition');
INNER JOIN(score)
LOAD YEAR,
     MINAVERAGE
RESIDENT threshold
;

result:
LOAD rowno()                                  as ID_RESULT,
     YEAR,
     MATRICULE,
     AVG_SCORE,
     IF(AVG_SCORE>MINAVERAGE, 'PASS', 'FAIL') as STATUS,
     $(number_abs(AVG_SCORE-MINAVERAGE))      as DELTA
RESIDENT score
ORDER BY YEAR, MATRICULE
;
call table_drop('score');

call console_info('Counting for each competitor how many times they passed and failed');
performance_tmp:
LOAD MATRICULE,
     COUNT(IF(STATUS='PASS', 1)) as SUCCESS_COUNT,
     COUNT(IF(STATUS='FAIL', 1)) as FAIL_COUNT
RESIDENT result
GROUP BY MATRICULE
ORDER BY MATRICULE
;

LEFT JOIN(competitor)
LOAD MATRICULE,
     SUCCESS_COUNT,
     FAIL_COUNT
RESIDENT performance_tmp
;
call table_drop('performance_tmp');

call console_info('Calculating the rank of each competitor');
rank_tmp:
LOAD rowno() as RANK,
     MATRICULE
RESIDENT competitor
ORDER BY SUCCESS_COUNT DESC, FAIL_COUNT ASC, MATRICULE
;
LEFT JOIN(competitor)
LOAD MATRICULE,
     RANK
RESIDENT rank_tmp
;
call table_drop('rank_tmp');


call console_info('End of the script $(vScriptName)');
call console_delimitation;
